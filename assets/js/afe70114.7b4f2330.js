"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9487],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var s=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},i=Object.keys(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=s.createContext({}),c=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=n(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,v=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return r?s.createElement(v,o(o({ref:t},d),{},{components:r})):s.createElement(v,o({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n.mdxType="string"==typeof e?e:a,o[1]=n;for(var c=2;c<i;c++)o[c]=r[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3553:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var s=r(7462),a=(r(7294),r(3905));const i={id:"termsused",title:"Technical Terms Used",description:"Terms Used in Gyeeta"},o="Terms Used in Gyeeta",n={unversionedId:"monitor/termsused",id:"monitor/termsused",title:"Technical Terms Used",description:"Terms Used in Gyeeta",source:"@site/docs/monitor/termsused.md",sourceDirName:"monitor",slug:"/monitor/termsused",permalink:"/docs/monitor/termsused",draft:!1,editUrl:"https://github.com/gyeeta/gyeeta.github.io/tree/main/docs/monitor/termsused.md",tags:[],version:"current",lastUpdatedAt:1657016899,formattedLastUpdatedAt:"Jul 5, 2022",frontMatter:{id:"termsused",title:"Technical Terms Used",description:"Terms Used in Gyeeta"},sidebar:"docs",previous:{title:"Overview & Limitations",permalink:"/docs/monitor/overview"},next:{title:"Querying Architecture",permalink:"/docs/category/querying-architecture"}},l={},c=[{value:"Service",id:"service",level:2},{value:"Subsystem",id:"subsystem",level:2},{value:"Grouped Process",id:"grouped-process",level:2},{value:"Grouped Process Name",id:"grouped-process-name",level:2},{value:"Service Name",id:"service-name",level:2},{value:"Cluster Name",id:"cluster-name",level:2},{value:"QPS (Queries/sec)",id:"qps-queriessec",level:2},{value:"Response Time (Latency)",id:"response-time-latency",level:2},{value:"CPU Delay",id:"cpu-delay",level:2},{value:"IO Delay",id:"io-delay",level:2},{value:"Memory Delay",id:"memory-delay",level:2},{value:"CPU Throttled (CPU Limited) Process",id:"cpu-throttled-cpu-limited-process",level:2},{value:"Memory Limited Process",id:"memory-limited-process",level:2},{value:"cgroup Memory Util %",id:"cgroup-memory-util-",level:2},{value:"Active Conns (Connections)",id:"active-conns-connections",level:2},{value:"Upstream Service",id:"upstream-service",level:2},{value:"Downstream Service/Application",id:"downstream-serviceapplication",level:2},{value:"Aggregation",id:"aggregation",level:2},{value:"Virtual IP / Virtual Port",id:"virtual-ip-port",level:2},{value:"Virtual IP Service Group",id:"virtual-ip-service-group",level:2},{value:"Interconnected Service Group",id:"interconnected-service-group",level:2}],d={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,s.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"terms-used-in-gyeeta"},"Terms Used in Gyeeta"),(0,a.kt)("p",null,"Some of the terms referenced in the Web UI and REST APIs are explained below. "),(0,a.kt)("div",{class:"card-demo"},(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"service"},"Service")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Service refers to a TCP Listener listening on a specific IP/port of a specific host. If an application say ",(0,a.kt)("code",null,"redis")," listens on IP 0.0.0.0 and ports 6379 and 6380, that will count as two separate services, one for each port. Service in Gyeeta is not the same as ",(0,a.kt)("code",null,"Kubernetes Services"),". For service applications run in containers (",(0,a.kt)("code",null,"docker")," or ",(0,a.kt)("code",null,"lxd"),"), the network namespace is also considered so that two containers listening on same IP/port but on different network namespaces will count as two seperate services."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"subsystem"},"Subsystem")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Gyeeta metric categories are referred to as ",(0,a.kt)("i",null,"subsystem"),". Main subsystems include : Service State, Process State, Network Inbound and Outbound, Host State, Cluster State. Subsystems are analogous to database tables."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"grouped-process"},"Grouped Process")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Gyeeta groups parent and child processes which run the same executable as a ",(0,a.kt)("i",null,"Grouped Process"),". All the processes within a Grouped Process have the same name and are created from the same binary and have the same parent/grandparent process. If after a parent creates a child process and then the child ",(0,a.kt)("code",null,"exec"),"utes a new binary, the child will not be grouped along with the parent as it becomes a new Grouped Process. Grouped Processes can contain a minimum of 1 process."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"grouped-process-name"},"Grouped Process Name")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"A ",(0,a.kt)("i",null,"Grouped Process")," is named from the executable binary used to spawn the process. For example, say ",(0,a.kt)("code",null,"postgres")," binary has been run by the shell. The newly created ",(0,a.kt)("i",null,"Process Group")," will have its name as ",(0,a.kt)("code",null,"postgres"),". The Process Name is truncated to max 15 bytes. For interpreted applications such as ",(0,a.kt)("code",null,"java"),", ",(0,a.kt)("code",null,"python"),", ",(0,a.kt)("code",null,"node")," or ",(0,a.kt)("code",null,"ruby"),", all processes will have the name set as the interpreter used such as ",(0,a.kt)("code",null,"java")," or ",(0,a.kt)("code",null,"node"),". This makes it difficult to figure which exact application is being referenced. In such cases, users should check the process ",(0,a.kt)("code",null,"cmdline")," field within the resultset returned by Gyeeta to figure the actual application."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"service-name"},"Service Name")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Gyeeta assigns each service a ",(0,a.kt)("i",null,"Service Name")," based on the ",(0,a.kt)("i",null,"Grouped Process Name")," of the process which started the service listener. The Service Name is truncated to max 15 bytes. For interpreted applications such as ",(0,a.kt)("code",null,"java"),", ",(0,a.kt)("code",null,"python"),", ",(0,a.kt)("code",null,"node")," or ",(0,a.kt)("code",null,"ruby"),", the services will have the name set as the interpreter used such as ",(0,a.kt)("code",null,"java")," or ",(0,a.kt)("code",null,"node"),". This makes it difficult to figure which exact service is being referenced. In such cases, users can check either of the ",(0,a.kt)("code",null,"Listener IP/Port"),", ",(0,a.kt)("code",null,"cmdline"),", ",(0,a.kt)("code",null,"tag"),", ",(0,a.kt)("code",null,"domain")," fields within the resultset returned by Gyeeta to figure the actual service."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"cluster-name"},"Cluster Name")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Each Monitored Host is assumed to be a part of a related Host Group or a ",(0,a.kt)("code",null,"cluster"),", say dev, test1, prod, etc. While configuring theHost Monitor agent ",(0,a.kt)("code",null,"partha"),", users need to configure the appropriate ",(0,a.kt)("i",null,"Cluster Name"),". In ",(0,a.kt)("code",null,"Kubernetes")," terminology, the ",(0,a.kt)("i",null,"Cluster Name")," could be the ",(0,a.kt)("code",null,"current-cluster")," in ",(0,a.kt)("code",null,"kubectl config"),". The cluster name should be set as the same for related hosts which will enable in quicker filtering and identifying Service Cluster Groups."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"qps-queriessec"},"QPS (Queries/sec)")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"QPS refers to Queries per sec. A query is a request and response pair with a request being the incoming data to a Service and response being the outbound data. Gyeeta will monitor the actual QPS and Response Times of ",(0,a.kt)("strong",null,"all")," services without any sampling."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"response-time-latency"},"Response Time (Latency)")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Response Time also referred to as Latency, indicates the time in msec that a Service takes to respond to a prior request sent by a Client. If a response from the Service is spread out (staggered) with some data being sent initially followed later by some other data, Gyeeta will only report the time taken by the service to send the initial data. In other words, Response Time in Gyeeta refers to the time taken by the service to ",(0,a.kt)("i",null,"start")," sending the response data."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"cpu-delay"},"CPU Delay")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"CPU Delay refers to the time in msec a ",(0,a.kt)("i",null,"Grouped Process")," had to wait for a CPU to become available while active. Non-zero values give an indication of either CPU contention or CPU Resource Limits such as ",(0,a.kt)("code",null,"Kubernetes Limits"),"."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"io-delay"},"IO Delay")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"IO Delay refers to the time in msec a ",(0,a.kt)("i",null,"Grouped Process")," had to wait for the completion of a prior initiated synchronous block I/O. Non-zero values may indicate a Disk IO contention or a slow Block device."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"memory-delay"},"Memory Delay")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Memory Delay refers to the time in msec a ",(0,a.kt)("i",null,"Grouped Process")," had to wait for a Virtual Memory operation to complete. Non-zero values may indicate Memory contention due to Page Swapping or Memory Reclaiming."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"cpu-throttled-cpu-limited-process"},"CPU Throttled (CPU Limited) Process")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Gyeeta flags a ",(0,a.kt)("i",null,"Grouped Process")," as ",(0,a.kt)("i",null,"CPU Throttled")," if processes within the group belong to a ",(0,a.kt)("code",null,"cgroup")," with limits set for CPU utilization such as ",(0,a.kt)("code",null,"Kubernetes")," limits."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"memory-limited-process"},"Memory Limited Process")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Gyeeta flags a ",(0,a.kt)("i",null,"Grouped Process")," as ",(0,a.kt)("i",null,"Memory Limited")," if processes within the group belong to a ",(0,a.kt)("code",null,"cgroup")," with limits set for max Resident Memory utilization such as ",(0,a.kt)("code",null,"Kubernetes")," limits."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"cgroup-memory-util-"},"cgroup Memory Util %")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"For ",(0,a.kt)("i",null,"Grouped Processes")," which are ",(0,a.kt)("i",null,"Memory Limited"),", this metric shows the current Memory cgroup Utilization percent. If the percent is approaching 100%, an Out of Memory OOM event may be trigered."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"active-conns-connections"},"Active Conns (Connections)")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Active Connections refer to the connections which have inbound or outbound traffic active during the time period requested."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"upstream-service"},"Upstream Service")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"If a service connects to another service as a TCP client, the service connected to will be the ",(0,a.kt)("i",null,"Upstream Service"),"."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"downstream-serviceapplication"},"Downstream Service/Application")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"If a service/process connects to another service as a TCP client, the client service/process will be the ",(0,a.kt)("i",null,"Downstream Service/Application"),"."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"aggregation"},"Aggregation")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,(0,a.kt)("i",null,"Aggregation")," refers to operations on a set of individual records to form a reduced (aggregated) resultset. In Gyeeta, Aggregation operates on a time duration of 1 min or more. ",(0,a.kt)("i",null,"Aggregation intervals")," define the step size used for aggregation operations on the resultset. The main Aggregation Operations include : ",(0,a.kt)("i",null,"average"),", ",(0,a.kt)("i",null,"minimum"),", ",(0,a.kt)("i",null,"maximum"),", ",(0,a.kt)("i",null,"sum"),", ",(0,a.kt)("i",null,"percentile"),", ",(0,a.kt)("i",null,"count"),"."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"virtual-ip-port"},"Virtual IP / Virtual Port")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"Virtual IP/Port refers to an IP/Port that client applications will connect to and these clients will then be routed to one or more actual service instances. In ",(0,a.kt)("code",null,"Kubernetes")," terminology, these refer to ",(0,a.kt)("i",null,"Service IP/Ports"),". In most cases, the Virtual IP/Port will act as a proxy using NAT or in-kernel proxying."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"virtual-ip-service-group"},"Virtual IP Service Group")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"A Virtual Service Service Group in Gyeeta refers to 2 or more services which have the same executable name and same Cluster Names and which have the same Virtual IP and Virtual Port. Gyeeta assumes these services act as a Service Cluster."))),(0,a.kt)("div",{style:{marginTop:20}}," "),(0,a.kt)("div",{class:"card"},(0,a.kt)("div",{class:"card__header"},(0,a.kt)("h2",{id:"interconnected-service-group"},"Interconnected Service Group")),(0,a.kt)("div",{class:"card__body"},(0,a.kt)("p",null,"An Interconnected Service Group in Gyeeta refers to 2 or more services which have the same executable name and same Cluster Names and which are connected to one another in a mesh style network. Gyeeta assumes these services act as a Service Cluster."))),(0,a.kt)("div",{style:{marginTop:20}}," ")))}u.isMDXComponent=!0}}]);