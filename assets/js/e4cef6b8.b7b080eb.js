"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5829],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const s="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),s=n(6010),l=n(2466),o=n(6550),i=n(1980),d=n(7392),u=n(12);function p(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function c(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=c(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[i,d]=b({queryString:n,groupId:a}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),v=(()=>{const e=i??p;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{v&&o(v)}),[v]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var v=n(2389);const h="tabList__CuJ",k="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:o,selectValue:i,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),a=d[n].value;a!==o&&(p(t),i(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},d.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},l,{className:(0,s.Z)("tabs__item",k,null==l?void 0:l.className,{"tabs__item--active":o===t})}),n??t)})))}function f(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=g(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",h)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(f,(0,a.Z)({},e,t)))}function N(e){const t=(0,v.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},402:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>b,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),s=n(4866),l=n(5162),o=n(814);const i={title:"Node Webserver Installation",description:"Node Webserver Installation",keywords:["node","webserver","installation"]},d="Node Webserver Installation",u={unversionedId:"installation/nodewebserver_install",id:"installation/nodewebserver_install",title:"Node Webserver Installation",description:"Node Webserver Installation",source:"@site/docs/installation/nodewebserver_install.md",sourceDirName:"installation",slug:"/installation/nodewebserver_install",permalink:"/docs/installation/nodewebserver_install",draft:!1,editUrl:"https://github.com/gyeeta/gyeeta.github.io/tree/main/docs/installation/nodewebserver_install.md",tags:[],version:"current",lastUpdatedAt:1679551739,formattedLastUpdatedAt:"Mar 23, 2023",frontMatter:{title:"Node Webserver Installation",description:"Node Webserver Installation",keywords:["node","webserver","installation"]},sidebar:"docs",previous:{title:"Node Webserver Configuration",permalink:"/docs/installation/nodewebserver_config"},next:{title:"Alert Action Agent Configuration",permalink:"/docs/installation/alertaction_config"}},p={},c=[{value:"Network Connectivity Requirements",id:"network",level:2},{value:"Installation Instructions",id:"installation-instructions",level:2},{value:"<em>Install using Shell script</em>",id:"shell-script",level:3},{value:"Stopping/Starting/Uninstalling the Node Webserver",id:"stoppingstartinguninstalling-the-node-webserver",level:4},{value:"<em>Install using Kubernetes Helm Chart</em>",id:"helm-chart",level:3},{value:"<em>Running as a Docker container</em>",id:"docker",level:3},{value:"<em>Install using native rpm or deb packages</em>",id:"rpm-deb",level:3},{value:"Node Webserver Configuration post Installation",id:"node-webserver-configuration-post-installation",level:4},{value:"Stopping/Starting/Uninstalling the Node Webserver",id:"stoppingstartinguninstalling-the-node-webserver-1",level:4},{value:"<em>Manual Tar Package install</em>",id:"tar-install",level:3},{value:"Connecting to the Webserver using a browser",id:"connecting-to-the-webserver-using-a-browser",level:2},{value:"Node Webserver Failover / Redundancy",id:"node-webserver-failover--redundancy",level:2}],m={toc:c};function b(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"node-webserver-installation"},"Node Webserver Installation"),(0,r.kt)("h2",{id:"network"},"Network Connectivity Requirements"),(0,r.kt)("p",null,"Node Webserver connects to Shyama Central server and all Madhava server instances."),(0,r.kt)("p",null,"Firewall rules must allow inbound access to the Node Webserver on the configured Listener port (default port is 10039)."),(0,r.kt)("h2",{id:"installation-instructions"},"Installation Instructions"),(0,r.kt)("p",null,"Different Install Options exist :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#shell-script"},"Install using Shell Script")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#helm-chart"},"Install using Kubernetes Helm Chart")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker"},"Running as a Docker container")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#rpm-deb"},"Install using native rpm or deb packages")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#tar-install"},"Manual Tar Package install"))),(0,r.kt)("p",null,"Except for Kubernetes installs, please ensure that the the Node Webserver Config file in env file format and optional User-Password Mapping\nfile in JSON format are ready as per ",(0,r.kt)("a",{parentName:"p",href:"./nodewebserver_config"},"Node Webserver Config"),"."),(0,r.kt)("h3",{id:"shell-script"},(0,r.kt)("em",{parentName:"h3"},"Install using Shell script")),(0,r.kt)("p",null,"Users can download a shell script that takes care of the installation and configuration of the Webserver instance."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Before installing the Webserver, users need to create a config file as per the ",(0,r.kt)("a",{parentName:"p",href:"./nodewebserver_config"},"Node Webserver Config"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\ncurl -o /tmp/install-gyeeta-nodewebserver.sh -s https://gyeeta.io/packages/install-gyeeta-nodewebserver.sh\n\n# Then run the install script as : \n# sudo bash /tmp/install-gyeeta-nodewebserver.sh <Path to nodewebserver Config file in bash env format>\n\n# Example Install Command (Please configure the /tmp/nodewebserver.env config file first) :\n\nsudo bash /tmp/install-gyeeta-nodewebserver.sh /tmp/nodewebserver.env\n\n")),(0,r.kt)("p",null,"The install script SHA256 can be checked before installing. The SHA256 of the install script is available at ",(0,r.kt)("a",{parentName:"p",href:"https://gyeeta.io/packages/install-gyeeta-nodewebserver.sh.sum"},"SHA256 file")),(0,r.kt)("h4",{id:"stoppingstartinguninstalling-the-node-webserver"},"Stopping/Starting/Uninstalling the Node Webserver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command to stop the Node Webserver"',title:'"Command',to:!0,stop:!0,the:!0,Node:!0,'Webserver"':!0},"\nsudo systemctl stop gyeeta-nodewebserver\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command to start the Node Webserver"',title:'"Command',to:!0,start:!0,the:!0,Node:!0,'Webserver"':!0},"\nsudo systemctl start gyeeta-nodewebserver\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Command to uninstall Node Webserver")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"UbuntuDebian",label:"Ubuntu / Debian",default:!0,mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo apt-get remove gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"rhel",label:"RHEL / Rocky Linux / Amazon Linux",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo yum erase gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"suse",label:"SuSE / OpenSuSE",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo zypper remove gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"fedora",label:"Fedora Linux",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo dnf remove gyeeta-nodewebserver"))),(0,r.kt)("h3",{id:"helm-chart"},(0,r.kt)("em",{parentName:"h3"},"Install using Kubernetes Helm Chart")),(0,r.kt)("p",null,"Kubernetes 1.19 or higher is needed along with Helm v3."),(0,r.kt)("p",null,"Refer to ",(0,r.kt)("a",{parentName:"p",href:"./k8s_helm/nodewebserver_helm"},"Node Webserver Helm Chart")," for a detailed explanation on installing to Kubernetes."),(0,r.kt)("p",null,"A short explanation is shown below :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nhelm repo add gyeeta https://gyeeta.io/helmcharts\nhelm repo update\nhelm show values gyeeta/nodewebserver > /tmp/nodewebserver.yaml\n\n# Thereafter you can edit the /tmp/nodewebserver.yaml file if you need to change any option. \n# After editing the /tmp/nodewebserver.yaml, install the nodewebserver Helm chart using :\n\nhelm install --namespace gyeeta --create-namespace nodewebserver1  gyeeta/nodewebserver -f /tmp/nodewebserver.yaml\n\n")),(0,r.kt)("h3",{id:"docker"},(0,r.kt)("em",{parentName:"h3"},"Running as a Docker container")),(0,r.kt)("p",null,"An env  config file needs to be created first as per ",(0,r.kt)("a",{parentName:"p",href:"./nodewebserver_config"},"Node Webserver Config")),(0,r.kt)("p",null,"In the example command below, /tmp/nodewebserver.env config file has already been created on the main host."),(0,r.kt)("p",null,"The docker container will only run under userid 1001 and groupid 1001."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\ndocker run -td --rm --name gyeetawebserver --read-only --user 1001:1001 -p 10039:10039  --env CFG_ENV=/tmp/nodewebserver.env -v /tmp/nodewebserver.env:/tmp/nodewebserver.env:ro ghcr.io/gyeeta/nodewebserver\n\n")),(0,r.kt)("h3",{id:"rpm-deb"},(0,r.kt)("em",{parentName:"h3"},"Install using native rpm or deb packages")),(0,r.kt)("p",null,"Gyeeta native rpm or deb packages are available. The install is to be followed by Node Webserver configuration."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"UbuntuDebian",label:"Ubuntu / Debian",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://pkg.gyeeta.workers.dev/pgp-key.public | sudo gpg --yes --dearmor --output /usr/share/keyrings/gyeeta-keyring.gpg\necho "deb [arch=amd64 signed-by=/usr/share/keyrings/gyeeta-keyring.gpg] https://pkg.gyeeta.workers.dev/apt-repo stable main" | sudo tee /etc/apt/sources.list.d/gyeeta.list\nsudo apt-get update\nsudo apt-get install -y gyeeta-nodewebserver\n'))),(0,r.kt)(l.Z,{value:"rhel",label:"RHEL / Rocky Linux / Amazon Linux",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rpm --import https://pkg.gyeeta.workers.dev/pgp-key.public\nsudo curl -s -o /etc/yum.repos.d/gyeeta.repo https://pkg.gyeeta.workers.dev/rpm-repo/gyeeta.repo\nsudo yum -y update\nsudo yum install -y gyeeta-nodewebserver\n"))),(0,r.kt)(l.Z,{value:"suse",label:"SuSE / OpenSuSE",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rpm --import https://pkg.gyeeta.workers.dev/pgp-key.public\nsudo curl -s -o /etc/zypp/repos.d/gyeeta.repo https://pkg.gyeeta.workers.dev/rpm-repo/gyeeta.repo\nsudo zypper -q -n install gyeeta-nodewebserver\n"))),(0,r.kt)(l.Z,{value:"fedora",label:"Fedora Linux",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rpm --import https://pkg.gyeeta.workers.dev/pgp-key.public\nsudo curl -s -o /etc/yum.repos.d/gyeeta.repo https://pkg.gyeeta.workers.dev/rpm-repo/gyeeta.repo\nsudo dnf -y update\nsudo dnf install -y gyeeta-nodewebserver\n")))),(0,r.kt)("h4",{id:"node-webserver-configuration-post-installation"},"Node Webserver Configuration post Installation"),(0,r.kt)("p",null,"After the deb or rpm package has been installed, the nodewebserver config file ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/gyeeta/nodewebserver/.env")," needs\nto be edited as per ",(0,r.kt)("a",{parentName:"p",href:"./nodewebserver_config"},"Node Webserver Config"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Start nodewebserver after editing the .env"',title:'"Start',nodewebserver:!0,after:!0,editing:!0,the:!0,'.env"':!0},"\n# After editing the /opt/gyeeta/nodewebserver/.env config file\n\nsudo systemctl start gyeeta-nodewebserver\nsudo systemctl enable gyeeta-nodewebserver\n\n")),(0,r.kt)("h4",{id:"stoppingstartinguninstalling-the-node-webserver-1"},"Stopping/Starting/Uninstalling the Node Webserver"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command to stop the Node Webserver"',title:'"Command',to:!0,stop:!0,the:!0,Node:!0,'Webserver"':!0},"\nsudo systemctl stop gyeeta-nodewebserver\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command to start the Node Webserver"',title:'"Command',to:!0,start:!0,the:!0,Node:!0,'Webserver"':!0},"\nsudo systemctl start gyeeta-nodewebserver\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Command to uninstall Node Webserver")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"UbuntuDebian",label:"Ubuntu / Debian",default:!0,mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo apt-get remove gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"rhel",label:"RHEL / Rocky Linux / Amazon Linux",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo yum erase gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"suse",label:"SuSE / OpenSuSE",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo zypper remove gyeeta-nodewebserver")),(0,r.kt)(l.Z,{value:"fedora",label:"Fedora Linux",mdxType:"TabItem"},(0,r.kt)(o.Z,{language:"sh",mdxType:"CodeBlock"},"sudo systemctl disable gyeeta-nodewebserver; sudo dnf remove gyeeta-nodewebserver"))),(0,r.kt)("h3",{id:"tar-install"},(0,r.kt)("em",{parentName:"h3"},"Manual Tar Package install")),(0,r.kt)("p",null,"If none of the above options can be used to install the Gyeeta nodewebserver component, a manual tarball extract and configure\ncan be used to install."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Example Install Command"',title:'"Example',Install:!0,'Command"':!0},"\nmkdir ~/gyeeta\ncd ~/gyeeta\ncurl -L https://github.com/gyeeta/nodewebserver/releases/download/$( curl https://api.github.com/repos/gyeeta/nodewebserver/releases/latest -s | grep tag_name | awk -F\\\" '{print $4}' )/nodewebserver.tar.gz | tar xzf -\ncd ./nodewebserver\n\n# Thereafter edit the .env Node Webserver config file and then start the Webserver as\n\n./runwebserver.sh start\n\n")),(0,r.kt)("h2",{id:"connecting-to-the-webserver-using-a-browser"},"Connecting to the Webserver using a browser"),(0,r.kt)("p",null,"After the installation runs successfully, users can access the Web UI by pointing their browsers to "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"http://<Hostname or IP of Webserver host>:<Webserver Listener port>")),(0,r.kt)("p",null,"The login name/password to be used to authenticate users can be any of the configured ones specified in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"CFG_USERPASSFILE")," file in nodewebserver ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file or if ",(0,r.kt)("inlineCode",{parentName:"p"},"CFG_ADMINPASSWORD")," is specified in which case the username would be ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),"."),(0,r.kt)("p",null,"The Node Webserver is by default an HTTP server. Users can configure the Web Server to use HTTPS by providing the TLS certificates,\nor change the HTTP port by editing the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," config and restarting gyeeta-nodewebserver. "),(0,r.kt)("h2",{id:"node-webserver-failover--redundancy"},"Node Webserver Failover / Redundancy"),(0,r.kt)("p",null,"Node Webserver servers can be setup for Multi Node High Availablity by installing 2 or more instances of Node Webservers."),(0,r.kt)("p",null,"Please refer to ",(0,r.kt)("a",{parentName:"p",href:"./failover"},"Failover")," for further details."))}b.isMDXComponent=!0}}]);