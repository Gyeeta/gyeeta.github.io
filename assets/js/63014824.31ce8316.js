"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6052],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||i;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8757:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={id:"alertwalkthru",title:"Alerting Walkthrough",description:"Alerting Process Walkthrough"},l="Alerting Process Walkthrough",o={unversionedId:"alerts/alertwalkthru",id:"alerts/alertwalkthru",title:"Alerting Walkthrough",description:"Alerting Process Walkthrough",source:"@site/docs/alerts/alertwalkthru.md",sourceDirName:"alerts",slug:"/alerts/alertwalkthru",permalink:"/docs/alerts/alertwalkthru",draft:!1,editUrl:"https://github.com/gyeeta.github.io/tree/main/docs/alerts/alertwalkthru.md",tags:[],version:"current",lastUpdatedAt:1669745732,formattedLastUpdatedAt:"Nov 29, 2022",frontMatter:{id:"alertwalkthru",title:"Alerting Walkthrough",description:"Alerting Process Walkthrough"},sidebar:"docs",previous:{title:"Alerts Overview",permalink:"/docs/alerts/alertoverview"},next:{title:"Developer APIs",permalink:"/docs/category/developer-apis"}},s={},p=[],c={toc:p};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"alerting-process-walkthrough"},"Alerting Process Walkthrough"),(0,a.kt)("p",null,"This section gives a walkthrough of the entire process involved in Gyeeta Alerting from the trigger to the resolution of the alert."),(0,a.kt)("p",null,"For the sake of simplicity, only Realtime Alerts are explained in this section. Most of the concepts will also apply to DB Aggregated Alerts."),(0,a.kt)("p",null,"Let us assume an Alert Definition has been set to fire a Realtime Alert if any ",(0,a.kt)("inlineCode",{parentName:"p"},"redis"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"postgres")," services has states ",(0,a.kt)("inlineCode",{parentName:"p"},"Bad")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Severe")," over\n5 consecutive evaluations."),(0,a.kt)("admonition",{title:"Pre-Aggregation Filter for use with REST APIs for above condition",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"({ name in 'postgres','redis','mysql' } and { state in 'Bad','Severe' })"))),(0,a.kt)("p",null,"This alert is for ",(0,a.kt)("inlineCode",{parentName:"p"},"extsvcstate")," subsystem i.e. related to Service State. Gyeeta updates Service States every 5 sec in the ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," Intermediate Servers. "),(0,a.kt)("p",null,"On every 5 sec Service State update, ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," will check if the above filter expression matches any Service State. If\na match is found, ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," will check the number of consecutive occurences of this alert for that specific Service. "),(0,a.kt)("p",null,"If it is the fifth occurence, then as per the Alert Definition, ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," will then send a preliminary alert to Shyama Alertmanager."),(0,a.kt)("p",null,"The Alertmanager, on receiving this ",(0,a.kt)("em",{parentName:"p"},"pre-alert")," will check the following conditions which will cancel out (suppress) this alert :"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check if the Alert is Silenced as per this Alert Definition specific Silence Rules"),(0,a.kt)("li",{parentName:"ol"},"Check if ",(0,a.kt)("em",{parentName:"li"},"All")," Alerts are disabled which could be because of an Alert Storm"),(0,a.kt)("li",{parentName:"ol"},"Check if the Alert is Silenced as per Global Alerts Silencing Rules"),(0,a.kt)("li",{parentName:"ol"},"Check if the Alert is Inhibited because of a prior Alert as per Inhibition Rules")),(0,a.kt)("p",null,"If all checks passed, Shyama will check if the Alert Definition has ",(0,a.kt)("em",{parentName:"p"},"Grouping")," enabled. If ",(0,a.kt)("em",{parentName:"p"},"Grouping")," is enabled, the Alert is\npushed to the respective Alert Group. Thereafter, when the Group Wait period completes, the Alert will be become active."),(0,a.kt)("p",null,"If ",(0,a.kt)("em",{parentName:"p"},"Grouping")," is disabled, the Alert becomes Active. The Alertmanager will then send the new Alert to the remote\nAlert Action Agent. The Alert Action Agent will execute all the Actions (Notifications) set for that alert."),(0,a.kt)("p",null,"At this point, the Alert is Active and is also pushed to Shyama server DB. The Alert can also be seen in the Web UI Alerts Dashboard.\nIf the Alert was cancelled out due to any of the checks above, the Alert will not be visible in the UI nor will it be databased."),(0,a.kt)("p",null,"Let us assume that the Alert Definition has set the Alert to be ",(0,a.kt)("em",{parentName:"p"},"Repeated")," if it remains active for over an hour. "),(0,a.kt)("p",null,"Now, on every 5 sec Service State update, the corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," instance will check the Alert Filter and set the Alert as active if the\ncondition keeps getting hit. "),(0,a.kt)("p",null,"If the Alert condition remains active an hour after the initial alert time, the corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava")," instance will send a\n",(0,a.kt)("em",{parentName:"p"},"Repeat")," alert to ",(0,a.kt)("inlineCode",{parentName:"p"},"shyama"),". "),(0,a.kt)("p",null,"On receiving this ",(0,a.kt)("em",{parentName:"p"},"Repeat")," alert, Shyama will again evaluate all the Checks for cancelling and if the checks pass, will send the Repeat Alert\nto the remote Alert Agent for the next round of notifications."),(0,a.kt)("p",null,"Now let us assume, a Service State update is seen where the Alert filter expression failed for that specific service. The corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"madhava"),"\ninstance will thereafter mark this alert as ",(0,a.kt)("em",{parentName:"p"},"Resolved")," and will intimate the Shyama Alertmanager. "),(0,a.kt)("p",null,"On Alert Resolution, Shyama will update the DB and the Web UI will also show the Alert as ",(0,a.kt)("em",{parentName:"p"},"Resolved"),". If the Alert Definition specified\nsending of Notifications on Alert Resolution, then the Alertmanager will send the notification request to the Alert Agent who will execute the action."),(0,a.kt)("p",null,"Each Alert Definition is associated with an Alert Expiry Duration (defaults to 10 hours and upto a max of 24 hours)."),(0,a.kt)("p",null,"Alertmanager will periodicaly check for Alert Expiries and on an expiry will mark that alert as ",(0,a.kt)("em",{parentName:"p"},"Expired")," and the DB updated. The Web UI will\nshow the Alert as ",(0,a.kt)("em",{parentName:"p"},"Expired"),". If the Alert Definition specified sending of Notifications on Alert Resolution, then Shyama will send the\nExpired Alert notification request to the Alert Agent who will execute the action."),(0,a.kt)("p",null,"If the Alert Definition had specified ",(0,a.kt)("em",{parentName:"p"},"Manual Alert Resolution")," instead of the default ",(0,a.kt)("em",{parentName:"p"},"auto resolution"),", then the Shyama Alertmanager will not\nset the Alert as ",(0,a.kt)("em",{parentName:"p"},"Resolved")," until users click on the ",(0,a.kt)("em",{parentName:"p"},"Set as Resolved")," button from the Web UI Alerts Dashboard or call the corresponding REST API call.\nAlert Expiry Rules will still be active for Manual Resolve Alerts as well."))}h.isMDXComponent=!0}}]);