"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5422],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>N});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=m(n),N=r,u=s["".concat(o,".").concat(N)]||s[N]||k[N]||l;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8126:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const l={title:"Node Webserver Helm Chart",description:"Node Webserver Kubernetes Helm Chart",keywords:["kubernetes","helm","installation"]},i="Node Webserver Kubernetes Helm Chart",d={unversionedId:"installation/k8s_helm/nodewebserver_helm",id:"installation/k8s_helm/nodewebserver_helm",title:"Node Webserver Helm Chart",description:"Node Webserver Kubernetes Helm Chart",source:"@site/docs/installation/k8s_helm/nodewebserver_helm.md",sourceDirName:"installation/k8s_helm",slug:"/installation/k8s_helm/nodewebserver_helm",permalink:"/docs/installation/k8s_helm/nodewebserver_helm",draft:!1,editUrl:"https://github.com/gyeeta/gyeeta.github.io/tree/main/docs/installation/k8s_helm/nodewebserver_helm.md",tags:[],version:"current",lastUpdatedAt:1669053801,formattedLastUpdatedAt:"Nov 21, 2022",frontMatter:{title:"Node Webserver Helm Chart",description:"Node Webserver Kubernetes Helm Chart",keywords:["kubernetes","helm","installation"]},sidebar:"docs",previous:{title:"Partha Helm Chart",permalink:"/docs/installation/k8s_helm/partha_helm"},next:{title:"Alert Agent Helm Chart",permalink:"/docs/installation/k8s_helm/alertaction_helm"}},o={},m=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install Instructions",id:"install-instructions",level:2},{value:"Uninstalling the Chart",id:"uninstalling-the-chart",level:2},{value:"Node Webserver Chart Parameters",id:"nodewebserver-parameters",level:2},{value:"Mandatory parameters to provide",id:"mandatory-parameters-to-provide",level:3},{value:"Node Webserver Config parameters",id:"node-webserver-config-parameters",level:3},{value:"Ingress parameters",id:"ingress-parameters",level:3},{value:"Other parameters",id:"other-parameters",level:3}],p={toc:m};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"node-webserver-kubernetes-helm-chart"},"Node Webserver Kubernetes Helm Chart"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../../architecture#node-webserver"},"Node Webserver")," can be installed in ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io"},"Kubernetes")," Cluster environments using\n",(0,r.kt)("a",{parentName:"p",href:"https://helm.sh"},"Helm Charts"),"."),(0,r.kt)("p",null,"The Node Webserver is installed as a Deployment with a default Replica Count as 1. "),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Kubernetes 1.19+"),(0,r.kt)("li",{parentName:"ul"},"Helm 3.2.0+")),(0,r.kt)("h2",{id:"install-instructions"},"Install Instructions"),(0,r.kt)("p",null,"The steps to install the Webserver Helm chart are :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add Gyeeta Repo to Helm"),(0,r.kt)("li",{parentName:"ul"},"Fetch and edit the values.yaml for the Webserver chart"),(0,r.kt)("li",{parentName:"ul"},"Install the Webserver chart with the edited values")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nhelm repo add gyeeta https://gyeeta.io/helmcharts\nhelm repo update\nhelm show values gyeeta/nodewebserver > /tmp/nodewebserver.yaml\n\n# Thereafter you can edit the /tmp/nodewebserver.yaml file if you need to change any option. \n# After editing the /tmp/nodewebserver.yaml, install the Node Webserver Helm chart using :\n\nhelm install --namespace gyeeta --create-namespace nodewebserver1  gyeeta/nodewebserver -f /tmp/nodewebserver.yaml\n\n")),(0,r.kt)("h2",{id:"uninstalling-the-chart"},"Uninstalling the Chart"),(0,r.kt)("p",null,"To uninstall the Webserver deployment say ",(0,r.kt)("inlineCode",{parentName:"p"},"nodewebserver1")," as per command above :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall nodewebserver1\n")),(0,r.kt)("h2",{id:"nodewebserver-parameters"},"Node Webserver Chart Parameters"),(0,r.kt)("p",null,"The default Chart config can be obtained using the command :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm show values gyeeta/nodewebserver > /tmp/nodewebserver.yaml\n")),(0,r.kt)("p",null,"Then users can edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/nodewebserver.yaml")," file. "),(0,r.kt)("h3",{id:"mandatory-parameters-to-provide"},"Mandatory parameters to provide"),(0,r.kt)("p",null,"The following are the mandatory parameters which users need to provide while installing the chart either using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--set")," CLI\noption or by editing the yaml values in the file saved (for example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/nodewebserver.yaml")," file in the command above) :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nodewebserver_config.shyama_hosts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nodewebserver_config.shyama_ports"))),(0,r.kt)("p",null,"The Helm chart install will fail if these parameters are not provided. Explanation about these parameters are given below."),(0,r.kt)("h3",{id:"node-webserver-config-parameters"},"Node Webserver Config parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".shyama_hosts")),(0,r.kt)("td",{parentName:"tr",align:null},"Shyama Service Domains : Specify one or more Shyama Service Names (e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},'[ "shyama1-headless" ]'),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".shyama_ports")),(0,r.kt)("td",{parentName:"tr",align:null},"Shyama Service Ports : Specify one or more Shyama Service Ports (e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},"[ 10037 ]"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".admin_password")),(0,r.kt)("td",{parentName:"tr",align:null},"Web ",(0,r.kt)("inlineCode",{parentName:"td"},"admin")," user password : Auto-generated if not specified"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".userpass_json")),(0,r.kt)("td",{parentName:"tr",align:null},"List of Users, Passwords and their roles in JSON Array format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".jwtsecret")),(0,r.kt)("td",{parentName:"tr",align:null},"Secret string to be used for JWT Auth Token encoding. Will be auto-generated if not specified"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".tokenexpiry")),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication Token expiry duration"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1d"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".https.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable HTTPS : Default is to use HTTP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".https.cert")),(0,r.kt)("td",{parentName:"tr",align:null},"If HTTPS enabled, TLS Certificate in PEM format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".https.key")),(0,r.kt)("td",{parentName:"tr",align:null},"If HTTPS enabled, TLS Private Key in PEM format"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".https.passphrase")),(0,r.kt)("td",{parentName:"tr",align:null},"If TLS Private Key is encrypted using a pass phrase"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".https.existing_secret_name")),(0,r.kt)("td",{parentName:"tr",align:null},"External TLS Certificate Secret name if already existent : Specify if ",(0,r.kt)("inlineCode",{parentName:"td"},"https.cert")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"https.key")," are empty"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config.")," ",(0,r.kt)("inlineCode",{parentName:"td"},"service.type")),(0,r.kt)("td",{parentName:"tr",align:null},"Kubernetes Service type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ClusterIP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config.")," ",(0,r.kt)("inlineCode",{parentName:"td"},"service.port")),(0,r.kt)("td",{parentName:"tr",align:null},"Kubernetes Service port"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"10039"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.nodePort")),(0,r.kt)("td",{parentName:"tr",align:null},"Node port. Specify if ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," set to ",(0,r.kt)("inlineCode",{parentName:"td"},"NodePort"),". Choose port between 30000-32767"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.clusterIP")),(0,r.kt)("td",{parentName:"tr",align:null},"Static ClusterIP or None for headless services"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.annotations")),(0,r.kt)("td",{parentName:"tr",align:null},"Service Annotations"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.loadBalancerIP")),(0,r.kt)("td",{parentName:"tr",align:null},"Load balancer IP if service ",(0,r.kt)("inlineCode",{parentName:"td"},"type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"LoadBalancer")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.externalTrafficPolicy")),(0,r.kt)("td",{parentName:"tr",align:null},"Cluster External Traffic Policy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Cluster"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".service.loadBalancerSourceRanges")),(0,r.kt)("td",{parentName:"tr",align:null},"Addresses that are allowed when service is LoadBalancer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))))),(0,r.kt)("h3",{id:"ingress-parameters"},"Ingress parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable Ingress Controller resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.hostname")),(0,r.kt)("td",{parentName:"tr",align:null},"Default host for the ingress resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"gyeeta.local"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.ingressClassName")),(0,r.kt)("td",{parentName:"tr",align:null},"Ingress Class that will be be used to implement the Ingress"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.annotations")),(0,r.kt)("td",{parentName:"tr",align:null},"Additional annotations for the Ingress resource"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.extraHosts")),(0,r.kt)("td",{parentName:"tr",align:null},"The list of additional hostnames to be covered with this ingress record"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.extraTls")),(0,r.kt)("td",{parentName:"tr",align:null},"The TLS configuration for additional hostnames to be covered with this ingress record"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.secrets")),(0,r.kt)("td",{parentName:"tr",align:null},"For your own TLS certificates, use this to add the certificates as secrets"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.extraRules")),(0,r.kt)("td",{parentName:"tr",align:null},"Additional rules to be covered with this ingress record"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.tls")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable TLS configuration for the hostname defined at ",(0,r.kt)("inlineCode",{parentName:"td"},"ingress.hostname")," parameter"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.selfSigned")),(0,r.kt)("td",{parentName:"tr",align:null},"Create a TLS secret for this ingress record using self-signed certificates generated by Helm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.apiVersion")),(0,r.kt)("td",{parentName:"tr",align:null},"Force Ingress API version (automatically detected if not set)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.path")),(0,r.kt)("td",{parentName:"tr",align:null},"Ingress path"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodewebserver_config")," ",(0,r.kt)("inlineCode",{parentName:"td"},".ingress.pathType")),(0,r.kt)("td",{parentName:"tr",align:null},"Ingress path type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ImplementationSpecific"))))),(0,r.kt)("h3",{id:"other-parameters"},"Other parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nameOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"Set a new name if you want to override the release name used"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fullnameOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"Set a new name if you want to override the fullname used"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clusterDomain")),(0,r.kt)("td",{parentName:"tr",align:null},"Default Kubernetes cluster domain"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cluster.local"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resources.requests")),(0,r.kt)("td",{parentName:"tr",align:null},"Resource Requests"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resources.limits")),(0,r.kt)("td",{parentName:"tr",align:null},"Resource Limits"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hostAliases")),(0,r.kt)("td",{parentName:"tr",align:null},"pod host aliases for ",(0,r.kt)("inlineCode",{parentName:"td"},"/etc/hosts")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"podSecurityPolicy")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable PodSecurityPolicy (only for K8s versions < 1.25)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"affinity")),(0,r.kt)("td",{parentName:"tr",align:null},"Affinity constraint for pod scheduling"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"podAffinityPreset")),(0,r.kt)("td",{parentName:"tr",align:null},"Pod affinity preset. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"affinity")," is set. Allowed values: ",(0,r.kt)("inlineCode",{parentName:"td"},"soft")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"hard")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"podAntiAffinityPreset")),(0,r.kt)("td",{parentName:"tr",align:null},"Pod anti-affinity preset. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"affinity")," is set. Allowed values: ",(0,r.kt)("inlineCode",{parentName:"td"},"soft")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"hard")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"soft"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodeAffinityPreset.type")),(0,r.kt)("td",{parentName:"tr",align:null},"Node affinity preset. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"affinity")," is set. Allowed values: ",(0,r.kt)("inlineCode",{parentName:"td"},"soft")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"hard")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodeAffinityPreset.key")),(0,r.kt)("td",{parentName:"tr",align:null},"Node label key to match. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"affinity")," is set."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'""'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nodeAffinityPreset.values")),(0,r.kt)("td",{parentName:"tr",align:null},"Node label values to match. Ignored if ",(0,r.kt)("inlineCode",{parentName:"td"},"affinity")," is set."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"replicaCount")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of replicas"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Number")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mounts.volumes")),(0,r.kt)("td",{parentName:"tr",align:null},"List of extra volumes to add"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mounts.volumeMounts")),(0,r.kt)("td",{parentName:"tr",align:null},"List of extra volume mounts"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extra.env")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra environment variables"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extra.args")),(0,r.kt)("td",{parentName:"tr",align:null},"Extra Command Line Arguments (CLI)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Array")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"serviceAccount.create")),(0,r.kt)("td",{parentName:"tr",align:null},"Create ServiceAccount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))))}k.isMDXComponent=!0}}]);